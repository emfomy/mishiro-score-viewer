!function(a){function e(e){for(var t,n,r=e[0],o=e[1],i=e[2],l=0,c=[];l<r.length;l++)n=r[l],f[n]&&c.push(f[n][0]),f[n]=0;for(t in o)Object.prototype.hasOwnProperty.call(o,t)&&(a[t]=o[t]);for(s&&s(e);c.length;)c.shift()();return d.push.apply(d,i||[]),u()}function u(){for(var e,t=0;t<d.length;t++){for(var n=d[t],r=!0,o=1;o<n.length;o++){var i=n[o];0!==f[i]&&(r=!1)}r&&(d.splice(t--,1),e=l(l.s=n[0]))}return e}var n={},f={1:0},d=[];function l(e){if(n[e])return n[e].exports;var t=n[e]={i:e,l:!1,exports:{}};return a[e].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=a,l.c=n,l.d=function(e,t,n){l.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},l.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(t,e){if(1&e&&(t=l(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(l.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)l.d(n,r,function(e){return t[e]}.bind(null,r));return n},l.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return l.d(t,"a",t),t},l.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},l.p="";var t=window.webpackJsonp=window.webpackJsonp||[],r=t.push.bind(t);t.push=e,t=t.slice();for(var o=0;o<t.length;o++)e(t[o]);var s=r;d.push([9,0]),u()}({10:function(e,t,n){"use strict";n.r(t);var r=n(1),i=n.n(r),l=function(i,l,c,a){return new(c||(c=Promise))(function(e,t){function n(e){try{o(a.next(e))}catch(e){t(e)}}function r(e){try{o(a.throw(e))}catch(e){t(e)}}function o(t){t.done?e(t.value):new c(function(e){e(t.value)}).then(n,r)}o((a=a.apply(i,l||[])).next())})},c=function(n,r){var o,i,l,e,c={label:0,sent:function(){if(1&l[0])throw l[1];return l[1]},trys:[],ops:[]};return e={next:t(0),throw:t(1),return:t(2)},"function"==typeof Symbol&&(e[Symbol.iterator]=function(){return this}),e;function t(t){return function(e){return function(t){if(o)throw new TypeError("Generator is already executing.");for(;c;)try{if(o=1,i&&(l=2&t[0]?i.return:t[0]?i.throw||((l=i.return)&&l.call(i),0):i.next)&&!(l=l.call(i,t[1])).done)return l;switch(i=0,l&&(t=[2&t[0],l.value]),t[0]){case 0:case 1:l=t;break;case 4:return c.label++,{value:t[1],done:!1};case 5:c.label++,i=t[1],t=[0];continue;case 7:t=c.ops.pop(),c.trys.pop();continue;default:if(!(l=0<(l=c.trys).length&&l[l.length-1])&&(6===t[0]||2===t[0])){c=0;continue}if(3===t[0]&&(!l||t[1]>l[0]&&t[1]<l[3])){c.label=t[1];break}if(6===t[0]&&c.label<l[1]){c.label=l[1],l=t;break}if(l&&c.label<l[2]){c.label=l[2],c.ops.push(t);break}l[2]&&c.ops.pop(),c.trys.pop();continue}t=r.call(n,c)}catch(e){t=[6,e],i=0}finally{o=l=0}if(5&t[0])throw t[1];return{value:t[0]?t[1]:void 0,done:!0}}([t,e])}}},o=function(){function o(){}return o.main=function(){return l(this,void 0,void 0,function(){var t,n;return c(this,function(e){switch(e.label){case 0:return e.trys.push([0,2,,3]),window.cordova&&window.screen.orientation.lock("portrait").catch(function(e){console.log(e.message),console.log(e.stack)}),t=o,[4,i.a.get("./data.json")];case 1:return t._data=e.sent().data,o._liveSelect=document.getElementById("live"),o._difficultySelect=document.getElementById("difficulty"),o._goButton=document.getElementById("go"),o._resver=document.getElementById("resver"),o._addEventListener(),o._render(),[3,3];case 2:return n=e.sent(),console.log(n),o._resver.innerHTML="unknown",[3,3];case 3:return[2]}})})},o._render=function(){o._resver.innerHTML=o._data.version;for(var r=Object.keys(o._data.list),e=function(t){var e=document.createElement("option");e.value=r[t],o._data.default.id===Number(r[t])&&(e.selected=!0,o._refreshDifficulty(r[t]));var n=o._data.music.find(function(e){return e.id===Number(r[t])});e.innerHTML=n?n.name.replace(/\\n/g,""):r[t],o._liveSelect.appendChild(e)},t=0;t<r.length;t++)e(t);o._difficultySelect.style.width=o._liveSelect.offsetWidth+"px"},o._addEventListener=function(){o._goButton.addEventListener("click",function(){window.location.href=window.location.protocol+"//"+window.location.host+window.location.pathname.substr(0,window.location.pathname.lastIndexOf("/")+1)+"score.html"+(o._liveSelect.value&&o._difficultySelect.value?"?id="+o._liveSelect.value+"&difficulty="+o._difficultySelect.value:"")},!1),o._liveSelect.addEventListener("change",function(e){console.log(e.target.value),o._refreshDifficulty(e.target.value)}),o._difficultySelect.addEventListener("change",function(e){console.log(e.target.value)})},o._refreshDifficulty=function(e){for(;o._difficultySelect.hasChildNodes();)o._difficultySelect.removeChild(o._difficultySelect.firstChild);for(var t=0;t<o._data.list[e].length;t++){var n=document.createElement("option"),r=o._data.list[e][t].toString();n.value=r,n.innerHTML=o._difficultyMap[r],"4"===r&&(n.selected=!0),o._difficultySelect.appendChild(n)}},o._difficultyMap={1:"Debut",2:"Regular",3:"Pro",4:"Master",5:"Master+"},o}();window.cordova?document.addEventListener("deviceready",function(){o.main(),console.log(window.cordova.file)}):o.main()},9:function(e,t,n){e.exports=n(10)}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vc3JjL2luZGV4LnRzIl0sIm5hbWVzIjpbIndlYnBhY2tKc29ucENhbGxiYWNrIiwiZGF0YSIsIm1vZHVsZUlkIiwiY2h1bmtJZCIsImNodW5rSWRzIiwibW9yZU1vZHVsZXMiLCJleGVjdXRlTW9kdWxlcyIsImkiLCJyZXNvbHZlcyIsImxlbmd0aCIsImluc3RhbGxlZENodW5rcyIsInB1c2giLCJPYmplY3QiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJtb2R1bGVzIiwicGFyZW50SnNvbnBGdW5jdGlvbiIsInNoaWZ0IiwiZGVmZXJyZWRNb2R1bGVzIiwiYXBwbHkiLCJjaGVja0RlZmVycmVkTW9kdWxlcyIsInJlc3VsdCIsImRlZmVycmVkTW9kdWxlIiwiZnVsZmlsbGVkIiwiaiIsImRlcElkIiwic3BsaWNlIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsInMiLCJpbnN0YWxsZWRNb2R1bGVzIiwiMSIsImV4cG9ydHMiLCJtb2R1bGUiLCJsIiwibSIsImMiLCJkIiwibmFtZSIsImdldHRlciIsIm8iLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJyIiwiU3ltYm9sIiwidG9TdHJpbmdUYWciLCJ2YWx1ZSIsInQiLCJtb2RlIiwiX19lc01vZHVsZSIsIm5zIiwiY3JlYXRlIiwia2V5IiwiYmluZCIsIm4iLCJvYmplY3QiLCJwcm9wZXJ0eSIsInAiLCJqc29ucEFycmF5Iiwid2luZG93Iiwib2xkSnNvbnBGdW5jdGlvbiIsInNsaWNlIiwiSG9tZSIsIm1haW4iLCJjb3Jkb3ZhIiwic2NyZWVuIiwib3JpZW50YXRpb24iLCJsb2NrIiwiY2F0Y2giLCJlcnIiLCJjb25zb2xlIiwibG9nIiwibWVzc2FnZSIsInN0YWNrIiwiX2EiLCJheGlvc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fX2RlZmF1bHQiLCJhIiwiX2RhdGEiLCJfYiIsInNlbnQiLCJfbGl2ZVNlbGVjdCIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJfZGlmZmljdWx0eVNlbGVjdCIsIl9nb0J1dHRvbiIsIl9yZXN2ZXIiLCJfYWRkRXZlbnRMaXN0ZW5lciIsIl9yZW5kZXIiLCJlcnJfMSIsImlubmVySFRNTCIsInZlcnNpb24iLCJsaXZlSWRzIiwia2V5cyIsImxpc3QiLCJvcHRpb24iLCJjcmVhdGVFbGVtZW50IiwiZGVmYXVsdCIsImlkIiwiTnVtYmVyIiwic2VsZWN0ZWQiLCJfcmVmcmVzaERpZmZpY3VsdHkiLCJsaXZlIiwibXVzaWMiLCJmaW5kIiwicmVwbGFjZSIsImFwcGVuZENoaWxkIiwic3R5bGUiLCJ3aWR0aCIsIm9mZnNldFdpZHRoIiwiYWRkRXZlbnRMaXN0ZW5lciIsImxvY2F0aW9uIiwiaHJlZiIsInByb3RvY29sIiwiaG9zdCIsInBhdGhuYW1lIiwic3Vic3RyIiwibGFzdEluZGV4T2YiLCJlIiwidGFyZ2V0IiwibGl2ZUlkIiwiaGFzQ2hpbGROb2RlcyIsInJlbW92ZUNoaWxkIiwiZmlyc3RDaGlsZCIsImRpZmZPcHRpb24iLCJkaWZmaWN1bHR5IiwidG9TdHJpbmciLCJfZGlmZmljdWx0eU1hcCIsIjIiLCIzIiwiNCIsIjUiLCJmaWxlIl0sIm1hcHBpbmdzIjoiYUFDQSxTQUFBQSxFQUFBQyxHQVFBLElBUEEsSUFNQUMsRUFBQUMsRUFOQUMsRUFBQUgsRUFBQSxHQUNBSSxFQUFBSixFQUFBLEdBQ0FLLEVBQUFMLEVBQUEsR0FJQU0sRUFBQSxFQUFBQyxFQUFBLEdBQ1FELEVBQUFILEVBQUFLLE9BQW9CRixJQUM1QkosRUFBQUMsRUFBQUcsR0FDQUcsRUFBQVAsSUFDQUssRUFBQUcsS0FBQUQsRUFBQVAsR0FBQSxJQUVBTyxFQUFBUCxHQUFBLEVBRUEsSUFBQUQsS0FBQUcsRUFDQU8sT0FBQUMsVUFBQUMsZUFBQUMsS0FBQVYsRUFBQUgsS0FDQWMsRUFBQWQsR0FBQUcsRUFBQUgsSUFLQSxJQUZBZSxLQUFBaEIsR0FFQU8sRUFBQUMsUUFD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SyxTQUNMQyxFQUFLLFdBb0VUcEUsRUFoRkEsR0FrRklILE9BQU9LLFFBQ1RpQixTQUFTNEIsaUJBQWlCLGNBQWUsV0FDdkMvQyxFQUFLQyxPQUNMTyxRQUFRQyxJQUFJWixPQUFPSyxRQUFRbUUsUUFHN0JyRSxFQUFLQyIsImZpbGUiOiJtYWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiIFx0Ly8gaW5zdGFsbCBhIEpTT05QIGNhbGxiYWNrIGZvciBjaHVuayBsb2FkaW5nXG4gXHRmdW5jdGlvbiB3ZWJwYWNrSnNvbnBDYWxsYmFjayhkYXRhKSB7XG4gXHRcdHZhciBjaHVua0lkcyA9IGRhdGFbMF07XG4gXHRcdHZhciBtb3JlTW9kdWxlcyA9IGRhdGFbMV07XG4gXHRcdHZhciBleGVjdXRlTW9kdWxlcyA9IGRhdGFbMl07XG5cbiBcdFx0Ly8gYWRkIFwibW9yZU1vZHVsZXNcIiB0byB0aGUgbW9kdWxlcyBvYmplY3QsXG4gXHRcdC8vIHRoZW4gZmxhZyBhbGwgXCJjaHVua0lkc1wiIGFzIGxvYWRlZCBhbmQgZmlyZSBjYWxsYmFja1xuIFx0XHR2YXIgbW9kdWxlSWQsIGNodW5rSWQsIGkgPSAwLCByZXNvbHZlcyA9IFtdO1xuIFx0XHRmb3IoO2kgPCBjaHVua0lkcy5sZW5ndGg7IGkrKykge1xuIFx0XHRcdGNodW5rSWQgPSBjaHVua0lkc1tpXTtcbiBcdFx0XHRpZihpbnN0YWxsZWRDaHVua3NbY2h1bmtJZF0pIHtcbiBcdFx0XHRcdHJlc29sdmVzLnB1c2goaW5zdGFsbGVkQ2h1bmtzW2NodW5rSWRdWzBdKTtcbiBcdFx0XHR9XG4gXHRcdFx0aW5zdGFsbGVkQ2h1bmtzW2NodW5rSWRdID0gMDtcbiBcdFx0fVxuIFx0XHRmb3IobW9kdWxlSWQgaW4gbW9yZU1vZHVsZXMpIHtcbiBcdFx0XHRpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobW9yZU1vZHVsZXMsIG1vZHVsZUlkKSkge1xuIFx0XHRcdFx0bW9kdWxlc1ttb2R1bGVJZF0gPSBtb3JlTW9kdWxlc1ttb2R1bGVJZF07XG4gXHRcdFx0fVxuIFx0XHR9XG4gXHRcdGlmKHBhcmVudEpzb25wRnVuY3Rpb24pIHBhcmVudEpzb25wRnVuY3Rpb24oZGF0YSk7XG5cbiBcdFx0d2hpbGUocmVzb2x2ZXMubGVuZ3RoKSB7XG4gXHRcdFx0cmVzb2x2ZXMuc2hpZnQoKSgpO1xuIFx0XHR9XG5cbiBcdFx0Ly8gYWRkIGVudHJ5IG1vZHVsZXMgZnJvbSBsb2FkZWQgY2h1bmsgdG8gZGVmZXJyZWQgbGlzdFxuIFx0XHRkZWZlcnJlZE1vZHVsZXMucHVzaC5hcHBseShkZWZlcnJlZE1vZHVsZXMsIGV4ZWN1dGVNb2R1bGVzIHx8IFtdKTtcblxuIFx0XHQvLyBydW4gZGVmZXJyZWQgbW9kdWxlcyB3aGVuIGFsbCBjaHVua3MgcmVhZHlcbiBcdFx0cmV0dXJuIGNoZWNrRGVmZXJyZWRNb2R1bGVzKCk7XG4gXHR9O1xuIFx0ZnVuY3Rpb24gY2hlY2tEZWZlcnJlZE1vZHVsZXMoKSB7XG4gXHRcdHZhciByZXN1bHQ7XG4gXHRcdGZvcih2YXIgaSA9IDA7IGkgPCBkZWZlcnJlZE1vZHVsZXMubGVuZ3RoOyBpKyspIHtcbiBcdFx0XHR2YXIgZGVmZXJyZWRNb2R1bGUgPSBkZWZlcnJlZE1vZHVsZXNbaV07XG4gXHRcdFx0dmFyIGZ1bGZpbGxlZCA9IHRydWU7XG4gXHRcdFx0Zm9yKHZhciBqID0gMTsgaiA8IGRlZmVycmVkTW9kdWxlLmxlbmd0aDsgaisrKSB7XG4gXHRcdFx0XHR2YXIgZGVwSWQgPSBkZWZlcnJlZE1vZHVsZVtqXTtcbiBcdFx0XHRcdGlmKGluc3RhbGxlZENodW5rc1tkZXBJZF0gIT09IDApIGZ1bGZpbGxlZCA9IGZhbHNlO1xuIFx0XHRcdH1cbiBcdFx0XHRpZihmdWxmaWxsZWQpIHtcbiBcdFx0XHRcdGRlZmVycmVkTW9kdWxlcy5zcGxpY2UoaS0tLCAxKTtcbiBcdFx0XHRcdHJlc3VsdCA9IF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gZGVmZXJyZWRNb2R1bGVbMF0pO1xuIFx0XHRcdH1cbiBcdFx0fVxuIFx0XHRyZXR1cm4gcmVzdWx0O1xuIFx0fVxuXG4gXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBvYmplY3QgdG8gc3RvcmUgbG9hZGVkIGFuZCBsb2FkaW5nIGNodW5rc1xuIFx0Ly8gdW5kZWZpbmVkID0gY2h1bmsgbm90IGxvYWRlZCwgbnVsbCA9IGNodW5rIHByZWxvYWRlZC9wcmVmZXRjaGVkXG4gXHQvLyBQcm9taXNlID0gY2h1bmsgbG9hZGluZywgMCA9IGNodW5rIGxvYWRlZFxuIFx0dmFyIGluc3RhbGxlZENodW5rcyA9IHtcbiBcdFx0MTogMFxuIFx0fTtcblxuIFx0dmFyIGRlZmVycmVkTW9kdWxlcyA9IFtdO1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuIFx0XHR9XG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRpOiBtb2R1bGVJZCxcbiBcdFx0XHRsOiBmYWxzZSxcbiBcdFx0XHRleHBvcnRzOiB7fVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBnZXR0ZXIgfSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uciA9IGZ1bmN0aW9uKGV4cG9ydHMpIHtcbiBcdFx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG4gXHRcdH1cbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiBcdH07XG5cbiBcdC8vIGNyZWF0ZSBhIGZha2UgbmFtZXNwYWNlIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDE6IHZhbHVlIGlzIGEgbW9kdWxlIGlkLCByZXF1aXJlIGl0XG4gXHQvLyBtb2RlICYgMjogbWVyZ2UgYWxsIHByb3BlcnRpZXMgb2YgdmFsdWUgaW50byB0aGUgbnNcbiBcdC8vIG1vZGUgJiA0OiByZXR1cm4gdmFsdWUgd2hlbiBhbHJlYWR5IG5zIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDh8MTogYmVoYXZlIGxpa2UgcmVxdWlyZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy50ID0gZnVuY3Rpb24odmFsdWUsIG1vZGUpIHtcbiBcdFx0aWYobW9kZSAmIDEpIHZhbHVlID0gX193ZWJwYWNrX3JlcXVpcmVfXyh2YWx1ZSk7XG4gXHRcdGlmKG1vZGUgJiA4KSByZXR1cm4gdmFsdWU7XG4gXHRcdGlmKChtb2RlICYgNCkgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB2YWx1ZSAmJiB2YWx1ZS5fX2VzTW9kdWxlKSByZXR1cm4gdmFsdWU7XG4gXHRcdHZhciBucyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18ucihucyk7XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShucywgJ2RlZmF1bHQnLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2YWx1ZSB9KTtcbiBcdFx0aWYobW9kZSAmIDIgJiYgdHlwZW9mIHZhbHVlICE9ICdzdHJpbmcnKSBmb3IodmFyIGtleSBpbiB2YWx1ZSkgX193ZWJwYWNrX3JlcXVpcmVfXy5kKG5zLCBrZXksIGZ1bmN0aW9uKGtleSkgeyByZXR1cm4gdmFsdWVba2V5XTsgfS5iaW5kKG51bGwsIGtleSkpO1xuIFx0XHRyZXR1cm4gbnM7XG4gXHR9O1xuXG4gXHQvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5uID0gZnVuY3Rpb24obW9kdWxlKSB7XG4gXHRcdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuIFx0XHRcdGZ1bmN0aW9uIGdldERlZmF1bHQoKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0TW9kdWxlRXhwb3J0cygpIHsgcmV0dXJuIG1vZHVsZTsgfTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgJ2EnLCBnZXR0ZXIpO1xuIFx0XHRyZXR1cm4gZ2V0dGVyO1xuIFx0fTtcblxuIFx0Ly8gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSBmdW5jdGlvbihvYmplY3QsIHByb3BlcnR5KSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSk7IH07XG5cbiBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiO1xuXG4gXHR2YXIganNvbnBBcnJheSA9IHdpbmRvd1tcIndlYnBhY2tKc29ucFwiXSA9IHdpbmRvd1tcIndlYnBhY2tKc29ucFwiXSB8fCBbXTtcbiBcdHZhciBvbGRKc29ucEZ1bmN0aW9uID0ganNvbnBBcnJheS5wdXNoLmJpbmQoanNvbnBBcnJheSk7XG4gXHRqc29ucEFycmF5LnB1c2ggPSB3ZWJwYWNrSnNvbnBDYWxsYmFjaztcbiBcdGpzb25wQXJyYXkgPSBqc29ucEFycmF5LnNsaWNlKCk7XG4gXHRmb3IodmFyIGkgPSAwOyBpIDwganNvbnBBcnJheS5sZW5ndGg7IGkrKykgd2VicGFja0pzb25wQ2FsbGJhY2soanNvbnBBcnJheVtpXSk7XG4gXHR2YXIgcGFyZW50SnNvbnBGdW5jdGlvbiA9IG9sZEpzb25wRnVuY3Rpb247XG5cblxuIFx0Ly8gYWRkIGVudHJ5IG1vZHVsZSB0byBkZWZlcnJlZCBsaXN0XG4gXHRkZWZlcnJlZE1vZHVsZXMucHVzaChbOSwwXSk7XG4gXHQvLyBydW4gZGVmZXJyZWQgbW9kdWxlcyB3aGVuIHJlYWR5XG4gXHRyZXR1cm4gY2hlY2tEZWZlcnJlZE1vZHVsZXMoKTtcbiIsImltcG9ydCBheGlvcyBmcm9tICdheGlvcydcclxuXHJcbmNsYXNzIEhvbWUge1xyXG4gIHByaXZhdGUgc3RhdGljIF9kYXRhOiBhbnlcclxuICBwcml2YXRlIHN0YXRpYyBfbGl2ZVNlbGVjdDogSFRNTFNlbGVjdEVsZW1lbnRcclxuICBwcml2YXRlIHN0YXRpYyBfZGlmZmljdWx0eVNlbGVjdDogSFRNTFNlbGVjdEVsZW1lbnRcclxuICBwcml2YXRlIHN0YXRpYyBfZ29CdXR0b246IEhUTUxCdXR0b25FbGVtZW50XHJcbiAgcHJpdmF0ZSBzdGF0aWMgX3Jlc3ZlcjogSFRNTFNwYW5FbGVtZW50XHJcblxyXG4gIHByaXZhdGUgc3RhdGljIF9kaWZmaWN1bHR5TWFwID0ge1xyXG4gICAgJzEnOiAnRGVidXQnLFxyXG4gICAgJzInOiAnUmVndWxhcicsXHJcbiAgICAnMyc6ICdQcm8nLFxyXG4gICAgJzQnOiAnTWFzdGVyJyxcclxuICAgICc1JzogJ01hc3RlcisnXHJcbiAgfVxyXG5cclxuICBwdWJsaWMgc3RhdGljIGFzeW5jIG1haW4gKCk6IFByb21pc2U8dm9pZD4ge1xyXG4gICAgdHJ5IHtcclxuICAgICAgaWYgKHdpbmRvdy5jb3Jkb3ZhKSB7XHJcbiAgICAgICAgd2luZG93LnNjcmVlbi5vcmllbnRhdGlvbi5sb2NrKCdwb3J0cmFpdCcpLmNhdGNoKGVyciA9PiB7XHJcbiAgICAgICAgICBjb25zb2xlLmxvZyhlcnIubWVzc2FnZSlcclxuICAgICAgICAgIGNvbnNvbGUubG9nKGVyci5zdGFjaylcclxuICAgICAgICB9KVxyXG4gICAgICB9XHJcbiAgICAgIEhvbWUuX2RhdGEgPSAoYXdhaXQgYXhpb3MuZ2V0KCcuL2RhdGEuanNvbicpKS5kYXRhXHJcbiAgICAgIEhvbWUuX2xpdmVTZWxlY3QgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbGl2ZScpIGFzIEhUTUxTZWxlY3RFbGVtZW50XHJcbiAgICAgIEhvbWUuX2RpZmZpY3VsdHlTZWxlY3QgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZGlmZmljdWx0eScpIGFzIEhUTUxTZWxlY3RFbGVtZW50XHJcbiAgICAgIEhvbWUuX2dvQnV0dG9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2dvJykgYXMgSFRNTEJ1dHRvbkVsZW1lbnRcclxuICAgICAgSG9tZS5fcmVzdmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Jlc3ZlcicpIGFzIEhUTUxTcGFuRWxlbWVudFxyXG4gICAgICBIb21lLl9hZGRFdmVudExpc3RlbmVyKClcclxuICAgICAgSG9tZS5fcmVuZGVyKClcclxuICAgIH0gY2F0Y2ggKGVycikge1xyXG4gICAgICBjb25zb2xlLmxvZyhlcnIpXHJcbiAgICAgIEhvbWUuX3Jlc3Zlci5pbm5lckhUTUwgPSAndW5rbm93bidcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHByaXZhdGUgc3RhdGljIF9yZW5kZXIgKCkge1xyXG4gICAgSG9tZS5fcmVzdmVyLmlubmVySFRNTCA9IEhvbWUuX2RhdGEudmVyc2lvblxyXG4gICAgY29uc3QgbGl2ZUlkczogc3RyaW5nW10gPSBPYmplY3Qua2V5cyhIb21lLl9kYXRhLmxpc3QpXHJcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGxpdmVJZHMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgY29uc3Qgb3B0aW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnb3B0aW9uJylcclxuICAgICAgb3B0aW9uLnZhbHVlID0gbGl2ZUlkc1tpXVxyXG4gICAgICBpZiAoSG9tZS5fZGF0YS5kZWZhdWx0LmlkID09PSBOdW1iZXIobGl2ZUlkc1tpXSkpIHtcclxuICAgICAgICBvcHRpb24uc2VsZWN0ZWQgPSB0cnVlXHJcbiAgICAgICAgSG9tZS5fcmVmcmVzaERpZmZpY3VsdHkobGl2ZUlkc1tpXSlcclxuICAgICAgfVxyXG4gICAgICBjb25zdCBsaXZlID0gSG9tZS5fZGF0YS5tdXNpYy5maW5kKChsaXZlOiB7IGlkOiBudW1iZXI7IG5hbWU6IHN0cmluZyB9KSA9PiBsaXZlLmlkID09PSBOdW1iZXIobGl2ZUlkc1tpXSkpXHJcbiAgICAgIG9wdGlvbi5pbm5lckhUTUwgPSBsaXZlID8gbGl2ZS5uYW1lLnJlcGxhY2UoL1xcXFxuL2csICcnKSA6IGxpdmVJZHNbaV1cclxuICAgICAgSG9tZS5fbGl2ZVNlbGVjdC5hcHBlbmRDaGlsZChvcHRpb24pXHJcbiAgICB9XHJcbiAgICBIb21lLl9kaWZmaWN1bHR5U2VsZWN0LnN0eWxlLndpZHRoID0gSG9tZS5fbGl2ZVNlbGVjdC5vZmZzZXRXaWR0aCArICdweCdcclxuICB9XHJcblxyXG4gIHByaXZhdGUgc3RhdGljIF9hZGRFdmVudExpc3RlbmVyICgpIHtcclxuICAgIEhvbWUuX2dvQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gICAgICAvLyBjb25zb2xlLmxvZyhgJHt3aW5kb3cubG9jYXRpb24ucHJvdG9jb2x9Ly8ke3dpbmRvdy5sb2NhdGlvbi5ob3N0fSR7d2luZG93LmxvY2F0aW9uLnBhdGhuYW1lfXNjb3JlLmh0bWw/aWQ9JHtIb21lLl9saXZlU2VsZWN0LnZhbHVlfSZkaWZmaWN1bHR5PSR7SG9tZS5fZGlmZmljdWx0eVNlbGVjdC52YWx1ZX1gKVxyXG4gICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9IGAke3dpbmRvdy5sb2NhdGlvbi5wcm90b2NvbH0vLyR7d2luZG93LmxvY2F0aW9uLmhvc3R9JHt3aW5kb3cubG9jYXRpb24ucGF0aG5hbWUuc3Vic3RyKDAsIHdpbmRvdy5sb2NhdGlvbi5wYXRobmFtZS5sYXN0SW5kZXhPZignLycpICsgMSl9c2NvcmUuaHRtbCR7SG9tZS5fbGl2ZVNlbGVjdC52YWx1ZSAmJiBIb21lLl9kaWZmaWN1bHR5U2VsZWN0LnZhbHVlID8gYD9pZD0ke0hvbWUuX2xpdmVTZWxlY3QudmFsdWV9JmRpZmZpY3VsdHk9JHtIb21lLl9kaWZmaWN1bHR5U2VsZWN0LnZhbHVlfWAgOiAnJ31gXHJcbiAgICB9LCBmYWxzZSlcclxuICAgIEhvbWUuX2xpdmVTZWxlY3QuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgKGUpID0+IHtcclxuICAgICAgY29uc29sZS5sb2coKGUudGFyZ2V0IGFzIEhUTUxTZWxlY3RFbGVtZW50KS52YWx1ZSlcclxuICAgICAgSG9tZS5fcmVmcmVzaERpZmZpY3VsdHkoKGUudGFyZ2V0IGFzIEhUTUxTZWxlY3RFbGVtZW50KS52YWx1ZSlcclxuICAgIH0pXHJcbiAgICBIb21lLl9kaWZmaWN1bHR5U2VsZWN0LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIChlKSA9PiB7XHJcbiAgICAgIGNvbnNvbGUubG9nKChlLnRhcmdldCBhcyBIVE1MU2VsZWN0RWxlbWVudCkudmFsdWUpXHJcbiAgICB9KVxyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBzdGF0aWMgX3JlZnJlc2hEaWZmaWN1bHR5IChsaXZlSWQ6IHN0cmluZykge1xyXG4gICAgd2hpbGUgKEhvbWUuX2RpZmZpY3VsdHlTZWxlY3QuaGFzQ2hpbGROb2RlcygpKSB7XHJcbiAgICAgIEhvbWUuX2RpZmZpY3VsdHlTZWxlY3QucmVtb3ZlQ2hpbGQoSG9tZS5fZGlmZmljdWx0eVNlbGVjdC5maXJzdENoaWxkIGFzIENoaWxkTm9kZSlcclxuICAgIH1cclxuICAgIGZvciAobGV0IGogPSAwOyBqIDwgSG9tZS5fZGF0YS5saXN0W2xpdmVJZF0ubGVuZ3RoOyBqKyspIHtcclxuICAgICAgY29uc3QgZGlmZk9wdGlvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ29wdGlvbicpXHJcbiAgICAgIGNvbnN0IGRpZmZpY3VsdHk6ICcxJyB8ICcyJyB8ICczJyB8ICc0JyB8ICc1JyA9IEhvbWUuX2RhdGEubGlzdFtsaXZlSWRdW2pdLnRvU3RyaW5nKClcclxuICAgICAgZGlmZk9wdGlvbi52YWx1ZSA9IGRpZmZpY3VsdHlcclxuICAgICAgZGlmZk9wdGlvbi5pbm5lckhUTUwgPSBIb21lLl9kaWZmaWN1bHR5TWFwW2RpZmZpY3VsdHldXHJcbiAgICAgIGlmIChkaWZmaWN1bHR5ID09PSAnNCcpIGRpZmZPcHRpb24uc2VsZWN0ZWQgPSB0cnVlXHJcbiAgICAgIEhvbWUuX2RpZmZpY3VsdHlTZWxlY3QuYXBwZW5kQ2hpbGQoZGlmZk9wdGlvbilcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbmlmICh3aW5kb3cuY29yZG92YSkge1xyXG4gIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2RldmljZXJlYWR5JywgKCkgPT4ge1xyXG4gICAgSG9tZS5tYWluKClcclxuICAgIGNvbnNvbGUubG9nKHdpbmRvdy5jb3Jkb3ZhLmZpbGUpXHJcbiAgfSlcclxufSBlbHNlIHtcclxuICBIb21lLm1haW4oKVxyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0=
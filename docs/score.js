!function(h){function t(t){for(var e,n,i=t[0],o=t[1],s=t[2],a=0,r=[];a<i.length;a++)n=i[a],l[n]&&r.push(l[n][0]),l[n]=0;for(e in o)Object.prototype.hasOwnProperty.call(o,e)&&(h[e]=o[e]);for(d&&d(t);r.length;)r.shift()();return u.push.apply(u,s||[]),c()}function c(){for(var t,e=0;e<u.length;e++){for(var n=u[e],i=!0,o=1;o<n.length;o++){var s=n[o];0!==l[s]&&(i=!1)}i&&(u.splice(e--,1),t=f(f.s=n[0]))}return t}var n={},l={2:0},u=[];function f(t){if(n[t])return n[t].exports;var e=n[t]={i:t,l:!1,exports:{}};return h[t].call(e.exports,e,e.exports,f),e.l=!0,e.exports}f.e=function(s){var t,e=[],n=l[s];if(0!==n)if(n)e.push(n[2]);else{var i=new Promise(function(t,e){n=l[s]=[t,e]});e.push(n[2]=i);var o,a=document.getElementsByTagName("head")[0],r=document.createElement("script");r.charset="utf-8",r.timeout=120,f.nc&&r.setAttribute("nonce",f.nc),r.src=f.p+""+({}[t=s]||t)+".js",o=function(t){r.onerror=r.onload=null,clearTimeout(h);var e=l[s];if(0!==e){if(e){var n=t&&("load"===t.type?"missing":t.type),i=t&&t.target&&t.target.src,o=new Error("Loading chunk "+s+" failed.\n("+n+": "+i+")");o.type=n,o.request=i,e[1](o)}l[s]=void 0}};var h=setTimeout(function(){o({type:"timeout",target:r})},12e4);r.onerror=r.onload=o,a.appendChild(r)}return Promise.all(e)},f.m=h,f.c=n,f.d=function(t,e,n){f.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},f.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},f.t=function(e,t){if(1&t&&(e=f(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(f.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)f.d(n,i,function(t){return e[t]}.bind(null,i));return n},f.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return f.d(e,"a",e),e},f.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},f.p="",f.oe=function(t){throw console.error(t),t};var e=window.webpackJsonp=window.webpackJsonp||[],i=e.push.bind(e);e.push=t,e=e.slice();for(var o=0;o<e.length;o++)t(e[o]);var d=i;u.push([29,0]),c()}({29:function(t,e,n){t.exports=n(31)},30:function(t,e,n){},31:function(t,e,f){"use strict";f.r(e);f(30);var i,o,s,a,n=f(1),r=f.n(n),h=function(){function a(t){var e=this;if(this.noteWidth=102,this.noteHeight=102,this.noteWidthFlip=125,this.scale=3,this.saveSpeed=12,this.backPng=void 0,this._notePng="",this.tapCanvas=document.createElement("canvas"),this.longLoopCanvas=document.createElement("canvas"),this.longMoveCanvas=document.createElement("canvas"),this.longMoveWhiteCanvas=document.createElement("canvas"),this.flipLeftCanvas=document.createElement("canvas"),this.flipRightCanvas=document.createElement("canvas"),this._se=null,this._seOk=null,a._instance)return a._instance;this.noteWidth=t.noteWidth||this.noteWidth,this.noteHeight=t.noteHeight||this.noteHeight,this.noteWidthFlip=t.noteWidthFlip||this.noteWidthFlip,this.scale=t.scale||this.scale,this.saveSpeed=t.saveSpeed||this.saveSpeed,this.backPng=t.backPng,this._notePng=t.notePng,this.tapCanvas.width=this.longLoopCanvas.width=this.longMoveCanvas.width=this.longMoveWhiteCanvas.width=this.tapCanvas.height=this.longLoopCanvas.height=this.longMoveCanvas.height=this.longMoveWhiteCanvas.height=this.flipLeftCanvas.height=this.flipRightCanvas.height=this.noteWidth,this.flipLeftCanvas.width=this.flipRightCanvas.width=this.noteWidthFlip;var n=a.newImage(this._notePng);return n.addEventListener("load",function(){e.tapCanvas.getContext("2d").drawImage(n,0,0,e.noteWidth,e.noteHeight,0,0,e.noteWidth,e.noteHeight),e.longLoopCanvas.getContext("2d").drawImage(n,e.noteWidth,0,e.noteWidth,e.noteHeight,0,0,e.noteWidth,e.noteHeight),e.longMoveCanvas.getContext("2d").drawImage(n,2*e.noteWidth,0,e.noteWidth,e.noteHeight,0,0,e.noteWidth,e.noteHeight),e.longMoveWhiteCanvas.getContext("2d").drawImage(n,3*e.noteWidth,0,e.noteWidth,e.noteHeight,0,0,e.noteWidth,e.noteHeight),e.flipLeftCanvas.getContext("2d").drawImage(n,4*e.noteWidth,0,e.noteWidthFlip,e.noteHeight,0,0,e.noteWidthFlip,e.noteHeight),e.flipRightCanvas.getContext("2d").drawImage(n,4*e.noteWidth+e.noteWidthFlip,0,e.noteWidthFlip,e.noteHeight,0,0,e.noteWidthFlip,e.noteHeight)}),t.se&&(this._se=a.createAudio(t.se)),t.seOk&&(this._seOk=a.createAudio(t.seOk)),a._instance=this}return a.newImage=function(t){var e=new Image;return e.src=t,e},a.createAudio=function(t){var e=new Audio(t);return e.preload="auto",e},a.createScore=function(t){for(var e=t.split("\n"),n=e[1].split(",").map(function(t){return Number(t)})[5],i=[],o=2;o<e.length;o++){var s=e[o].split(",").map(function(t){return Number(t)});1!==s[2]&&2!==s[2]&&3!==s[2]||i.push({sec:s[1],type:s[2],finishPos:s[4],status:s[5],sync:s[6],groupId:s[7]})}return{fullCombo:n,score:i}},a.getCordova=function(){return window.cordova},a.isCordova=function(){return!!a.getCordova()},a.getQuery=function(t){if(a._query)return a._query[t];if(a._query={},window.location.search){for(var e=window.location.search.substr(1).split("&"),n=0;n<e.length;n++){var i=e[n].split("="),o=i[0],s=i[1];a._query[o]=s}return a._query[t]}},Object.defineProperty(a.prototype,"noteWidthDelta",{get:function(){return this.noteWidthFlip-this.noteWidth},enumerable:!0,configurable:!0}),Object.defineProperty(a.prototype,"noteWidthHalf",{get:function(){return this.noteWidth/2},enumerable:!0,configurable:!0}),Object.defineProperty(a.prototype,"noteHeightHalf",{get:function(){return this.noteHeight/2},enumerable:!0,configurable:!0}),a.prototype.getInstance=function(){if(!a._instance)throw new Error("Global instance null.");return a._instance},a.play=function(t){var e=t.play();e&&e.catch&&e.catch(function(t){return console.log(t)})},a.prototype.playSe=function(){this._se&&(this._se.currentTime=0,a.play(this._se))},a.prototype.playSeOk=function(){this._seOk&&(this._seOk.currentTime=0,a.play(this._seOk))},a._instance=null,a._query=null,a}(),d=new h({notePng:"./img/icon_notes.png",backPng:{src:"./img/live_icon_857x114.png",height:114,width:857}}),c=h,l=function(){function t(t){this._connectionHeight=12,this._sec=t.sec,this._x=I.X[t.finishPos-1],this._y=-d.noteHeight,this._connection=null,this._synchronizedNote=null}return t.prototype.setY=function(t){this._y=t},t.prototype.getX=function(){return this._x},t.prototype.setX=function(t){this._x=t},t.prototype.saveDrawSync=function(t){if(this._synchronizedNote){var e=I.X[this._synchronizedNote.finishPos-1]+d.noteWidthHalf,n=I.saveCalY(t,this._sec)+d.noteHeightHalf-this._connectionHeight/2/d.scale,i=this._x+d.noteWidthHalf+(I.X.includes(this._x)?0:d.noteWidthDelta);t.saveCtx.fillRect((i<e?i:e)+d.noteWidthHalf,n,(i<e?e-i:i-e)-d.noteWidth,this._connectionHeight/d.scale)}},t.prototype.drawSync=function(t){if(this._synchronizedNote){var e=I.X[this._synchronizedNote.finishPos-1]+d.noteWidthHalf,n=I.calY(t.options.speed,this._sec,t.audio.currentTime)+d.noteHeightHalf-this._connectionHeight/2,i=this._x+d.noteWidthHalf+(I.X.includes(this._x)?0:d.noteWidthDelta);t.frontCtx.fillRect((i<e?i:e)+d.noteWidthHalf,n,(i<e?e-i:i-e)-d.noteWidth,this._connectionHeight)}},t.prototype.isNeedDraw=function(){return this._y<-d.noteHeight?!!this._connection&&this._connection._instance._y>=-d.noteHeight:this._y<I.TOP_TO_TARGET_POSITION},t}(),u=(i=function(t,e){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),_=function(i){function t(t,e){var n=i.call(this,t)||this;return e&&(n._synchronizedNote=e),n}return u(t,i),t.prototype.drawConnection=function(t){},t.prototype.drawNote=function(t){t.frontCtx.drawImage(d.tapCanvas,this._x,this._y)},t.prototype.saveDrawConnection=function(t){},t.prototype.saveDrawNote=function(t){t.saveCtx.drawImage(d.tapCanvas,0,0,d.tapCanvas.width,d.tapCanvas.height,this._x,this._y,d.tapCanvas.width/d.scale,d.tapCanvas.height/d.scale)},t}(l),p=(o=function(t,e){return(o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}o(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),g=function(o){function t(t,e,n){var i=o.call(this,t)||this;return i._status=t.status,1===i._status&&(i._x=i._x-d.noteWidthDelta),e&&(i._connection=e),n&&(i._synchronizedNote=n),i}return p(t,o),t.prototype._drawFlipConnection=function(t,e,n){if(!(n>=I.TOP_TO_TARGET_POSITION)){var i=1===this._status?this._x+d.noteWidthDelta+d.noteWidthHalf:this._x+d.noteWidthHalf;t.beginPath(),t.moveTo(i,this._y),t.lineTo(i,this._y+d.noteHeight),t.lineTo(e+d.noteWidthHalf,n+d.noteHeight),t.lineTo(e+d.noteWidthHalf,n),t.lineTo(i,this._y),t.fill()}},t.prototype._drawLongConnection=function(t,e){var n=1===this._status?this._x+d.noteWidthDelta:this._x;t.beginPath(),t.arc(n+d.noteWidthHalf,this._y+d.noteHeightHalf,d.noteWidthHalf,0,Math.PI,!0);var i=e>I.TOP_TO_TARGET_POSITION?I.TOP_TO_TARGET_POSITION+d.noteHeightHalf:e+d.noteHeightHalf;t.lineTo(n,i),t.arc(n+d.noteWidthHalf,i,d.noteWidthHalf,Math.PI,2*Math.PI,!0),t.lineTo(n+d.noteWidth,this._y+d.noteHeightHalf),t.fill()},t.prototype._drawMoveConnection=function(t,e,n,i){t.beginPath(),t.arc(1===this._status?this._x+d.noteWidthHalf+d.noteWidthDelta:this._x+d.noteWidthHalf,this._y+d.noteHeightHalf,d.noteWidthHalf,0,Math.PI,!0);var o=n>I.TOP_TO_TARGET_POSITION?I.TOP_TO_TARGET_POSITION+d.noteHeightHalf:n+d.noteHeightHalf,s=n>I.TOP_TO_TARGET_POSITION?e+(this._x-e)*-(I.TOP_TO_TARGET_POSITION-n)/(-(I.TOP_TO_TARGET_POSITION-n)+(I.TOP_TO_TARGET_POSITION-this._y)):e;t.lineTo(s,o),t.arc(s+d.noteWidthHalf,o,d.noteWidthHalf,Math.PI,2*Math.PI,!0),t.lineTo(1===this._status?this._x+d.noteWidth+d.noteWidthDelta:this._x+d.noteWidth,this._y+d.noteHeightHalf),t.fill(),n>I.TOP_TO_TARGET_POSITION&&(i?t.drawImage(d.longMoveWhiteCanvas,0,0,d.longMoveWhiteCanvas.width,d.longMoveWhiteCanvas.height,s,o-d.noteHeightHalf,d.longMoveWhiteCanvas.width/i,d.longMoveWhiteCanvas.height/i):t.drawImage(d.longMoveWhiteCanvas,s,o-d.noteHeightHalf))},t.prototype.drawConnection=function(t){if(this._connection){var e=I.X[this._connection.finishPos-1],n=I.calY(t.options.speed,this._connection.sec,t.audio.currentTime);1===this._connection.type?this._drawFlipConnection(t.frontCtx,e,n):2===this._connection.type?0===this._connection.status?this._drawLongConnection(t.frontCtx,n):this._drawFlipConnection(t.frontCtx,e,n):3===this._connection.type&&(0===this._connection.status?this._drawMoveConnection(t.frontCtx,e,n):this._drawFlipConnection(t.frontCtx,e,n))}},t.prototype.drawNote=function(t){t.frontCtx.drawImage(1===this._status?d.flipLeftCanvas:d.flipRightCanvas,this._x,this._y)},t.prototype.saveDrawConnection=function(t){if(this._connection){var e=I.X[this._connection.finishPos-1],n=I.saveCalY(t,this._connection.sec);1===this._connection.type?this._drawFlipConnection(t.saveCtx,e,n):2===this._connection.type?0===this._connection.status?this._drawLongConnection(t.saveCtx,n):this._drawFlipConnection(t.saveCtx,e,n):3===this._connection.type&&(0===this._connection.status?this._drawMoveConnection(t.saveCtx,e,n,d.scale):this._drawFlipConnection(t.saveCtx,e,n))}},t.prototype.saveDrawNote=function(t){1===this._status?t.saveCtx.drawImage(d.flipLeftCanvas,0,0,d.flipLeftCanvas.width,d.flipLeftCanvas.height,this._x,this._y,d.flipLeftCanvas.width/d.scale,d.flipLeftCanvas.height/d.scale):t.saveCtx.drawImage(d.flipRightCanvas,0,0,d.flipRightCanvas.width,d.flipRightCanvas.height,this._x,this._y,d.flipRightCanvas.width/d.scale,d.flipRightCanvas.height/d.scale)},t}(l),v=(s=function(t,e){return(s=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}s(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),y=function(o){function t(t,e,n){var i=o.call(this,t)||this;return e&&(i._connection=e),n&&(i._synchronizedNote=n),i}return v(t,o),t.prototype.drawConnection=function(t){if(this._connection){var e=I.calY(t.options.speed,this._connection.sec,t.audio.currentTime);t.frontCtx.beginPath(),t.frontCtx.arc(this._x+d.noteWidthHalf,this._y+d.noteHeightHalf,d.noteWidthHalf,0,Math.PI,!0);var n=e>I.TOP_TO_TARGET_POSITION?I.TOP_TO_TARGET_POSITION+d.noteHeightHalf:e+d.noteHeightHalf;t.frontCtx.lineTo(this._x,n),t.frontCtx.arc(this._x+d.noteWidthHalf,n,d.noteWidthHalf,Math.PI,2*Math.PI,!0),t.frontCtx.lineTo(this._x+d.noteWidth,this._y+d.noteHeightHalf),t.frontCtx.fill()}},t.prototype.drawNote=function(t){t.frontCtx.drawImage(d.longLoopCanvas,this._x,this._y)},t.prototype.saveDrawConnection=function(t){if(this._connection){var e=I.saveCalY(t,this._connection.sec);t.saveCtx.beginPath(),t.saveCtx.arc(this._x+d.noteWidthHalf,this._y+d.noteHeightHalf,d.noteWidthHalf,0,Math.PI,!0);var n=e>I.TOP_TO_TARGET_POSITION?I.TOP_TO_TARGET_POSITION+d.noteHeightHalf:e+d.noteHeightHalf;t.saveCtx.lineTo(this._x,n),t.saveCtx.arc(this._x+d.noteWidthHalf,n,d.noteWidthHalf,Math.PI,2*Math.PI,!0),t.saveCtx.lineTo(this._x+d.noteWidth,this._y+d.noteHeightHalf),t.saveCtx.fill()}},t.prototype.saveDrawNote=function(t){t.saveCtx.drawImage(d.longLoopCanvas,0,0,d.longLoopCanvas.width,d.longLoopCanvas.height,this._x,this._y,d.longLoopCanvas.width/d.scale,d.longLoopCanvas.height/d.scale)},t}(l),C=(a=function(t,e){return(a=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}a(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),T=function(o){function t(t,e,n){var i=o.call(this,t)||this;return e&&(i._connection=e),n&&(i._synchronizedNote=n),i}return C(t,o),t.prototype.drawConnection=function(t){if(this._connection){var e=I.X[this._connection.finishPos-1],n=I.calY(t.options.speed,this._connection.sec,t.audio.currentTime);t.frontCtx.beginPath(),t.frontCtx.arc(this._x+d.noteWidthHalf,this._y+d.noteHeightHalf,d.noteWidthHalf,0,Math.PI,!0);var i=n>I.TOP_TO_TARGET_POSITION?I.TOP_TO_TARGET_POSITION+d.noteHeightHalf:n+d.noteHeightHalf,o=n>I.TOP_TO_TARGET_POSITION?e+(this._x-e)*-(I.TOP_TO_TARGET_POSITION-n)/(-(I.TOP_TO_TARGET_POSITION-n)+(I.TOP_TO_TARGET_POSITION-this._y)):e;t.frontCtx.lineTo(o,i),t.frontCtx.arc(o+d.noteWidthHalf,i,d.noteWidthHalf,Math.PI,2*Math.PI,!0),t.frontCtx.lineTo(this._x+d.noteWidth,this._y+d.noteHeightHalf),t.frontCtx.fill(),n>I.TOP_TO_TARGET_POSITION&&t.frontCtx.drawImage(d.longMoveWhiteCanvas,o,i-d.noteHeightHalf)}},t.prototype.drawNote=function(t){t.frontCtx.drawImage(d.longMoveCanvas,this._x,this._y)},t.prototype.saveDrawConnection=function(t){if(this._connection){var e=I.X[this._connection.finishPos-1],n=I.saveCalY(t,this._connection.sec);t.saveCtx.beginPath(),t.saveCtx.arc(this._x+d.noteWidthHalf,this._y+d.noteHeightHalf,d.noteWidthHalf,0,Math.PI,!0);var i=n>I.TOP_TO_TARGET_POSITION?I.TOP_TO_TARGET_POSITION+d.noteHeightHalf:n+d.noteHeightHalf,o=n>I.TOP_TO_TARGET_POSITION?e+(this._x-e)*-(I.TOP_TO_TARGET_POSITION-n)/(-(I.TOP_TO_TARGET_POSITION-n)+(I.TOP_TO_TARGET_POSITION-this._y)):e;t.saveCtx.lineTo(o,i),t.saveCtx.arc(o+d.noteWidthHalf,i,d.noteWidthHalf,Math.PI,2*Math.PI,!0),t.saveCtx.lineTo(this._x+d.noteWidth,this._y+d.noteHeightHalf),t.saveCtx.fill(),n>I.TOP_TO_TARGET_POSITION&&t.saveCtx.drawImage(d.longMoveWhiteCanvas,0,0,d.longMoveWhiteCanvas.width,d.longMoveWhiteCanvas.height,o,i-d.noteHeightHalf,d.longMoveWhiteCanvas.width/d.scale,d.longMoveWhiteCanvas.height/d.scale)}},t.prototype.saveDrawNote=function(t){t.saveCtx.drawImage(d.longMoveCanvas,0,0,d.longMoveCanvas.width,d.longMoveCanvas.height,this._x,this._y,d.longMoveCanvas.width/d.scale,d.longMoveCanvas.height/d.scale)},t}(l),w=function(s,a,r,h){return new(r||(r=Promise))(function(t,e){function n(t){try{o(h.next(t))}catch(t){e(t)}}function i(t){try{o(h.throw(t))}catch(t){e(t)}}function o(e){e.done?t(e.value):new r(function(t){t(e.value)}).then(n,i)}o((h=h.apply(s,a||[])).next())})},O=function(n,i){var o,s,a,t,r={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return t={next:e(0),throw:e(1),return:e(2)},"function"==typeof Symbol&&(t[Symbol.iterator]=function(){return this}),t;function e(e){return function(t){return function(e){if(o)throw new TypeError("Generator is already executing.");for(;r;)try{if(o=1,s&&(a=2&e[0]?s.return:e[0]?s.throw||((a=s.return)&&a.call(s),0):s.next)&&!(a=a.call(s,e[1])).done)return a;switch(s=0,a&&(e=[2&e[0],a.value]),e[0]){case 0:case 1:a=e;break;case 4:return r.label++,{value:e[1],done:!1};case 5:r.label++,s=e[1],e=[0];continue;case 7:e=r.ops.pop(),r.trys.pop();continue;default:if(!(a=0<(a=r.trys).length&&a[a.length-1])&&(6===e[0]||2===e[0])){r=0;continue}if(3===e[0]&&(!a||e[1]>a[0]&&e[1]<a[3])){r.label=e[1];break}if(6===e[0]&&r.label<a[1]){r.label=a[1],a=e;break}if(a&&r.label<a[2]){r.label=a[2],r.ops.push(e);break}a[2]&&r.ops.pop(),r.trys.pop();continue}e=i.call(n,r)}catch(t){e=[6,t],s=0}finally{o=a=0}if(5&e[0])throw e[1];return{value:e[0]?e[1]:void 0,done:!0}}([e,t])}}},I=function(){function u(t,e,n){return this.options={speed:12},this._isReady=!1,this._isReadyToSave=!1,this._isPaused=!0,this._isClean=!0,u._instance?u._instance:(n&&(this.options=Object.assign({},this.options,n)),this.audio=c.createAudio(t.src),this.song=t,this._resolveNoteList(),this._resolveDOM(e),u._instance=this)}return u.main=function(){return w(this,void 0,void 0,function(){var e,n,i,o,s,a;return O(this,function(t){switch(t.label){case 0:return window.cordova&&window.screen.orientation.lock("landscape").catch(function(t){console.log(t.message),console.log(t.stack)}),e=u,[4,r.a.get("./data.json")];case 1:return e._data=t.sent().data,u._id=Number(c.getQuery("id"))||u._data.default.id,u._difficulty=Number(c.getQuery("difficulty"))||u._data.default.score,n=u._data.music.find(function(t){return t.id===u._id}),u._name=n?n.name.replace(/\\n/g,""):"Score",document.getElementsByTagName("title")[0].innerHTML=u._name,[4,r.a.get("./res/"+u._id+"-"+u._difficulty+".csv")];case 2:return i=t.sent().data,o=c.createScore(i),s=o.fullCombo,a=o.score,u.init({src:"./res/"+u._id+".mp3",fullCombo:s,score:a},document.body),[2]}})})},u.init=function(t,e,n){return new u(t,e,n)},u.calY=function(t,e,n){return u.TOP_TO_TARGET_POSITION-~~(60*t*(e-n))},u.saveCalY=function(t,e){return t.saveCanvas.height-~~(60*d.saveSpeed*e)/d.scale},u.prototype._setNoteInstance=function(t,e){this.song.score[t]._instance||(this.song.score[t]._instance=e)},u.prototype._resolveNoteList=function(){for(var t=0;t<this.song.score.length;t++)if(!this.song.score[t]._instance){var e=this.song.score[t];switch(e.type){case 1:if(0===e.status)this._setNoteInstance(t,new _(e,this._getSyncNote(t)));else{var n=this._findSameGroup(t,e.groupId);if(n.length){for(var i=0;i<n.length-1;i++)if(this.song.score[n[i]].finishPos===this.song.score[n[i+1]].finishPos){n=n.slice(0,i+1);break}for(var o=n.length-1;0<o;o--)this._setNoteInstance(n[o],new g(this.song.score[n[o]],this.song.score[n[o-1]],this._getSyncNote(n[o])));this._setNoteInstance(n[0],new g(this.song.score[n[0]],e,this._getSyncNote(n[0])))}this._setNoteInstance(t,new g(e,void 0,this._getSyncNote(t)))}break;case 2:var s=this._findLongNote(t,e.finishPos);if(-1!==s){var a=this._findSameGroup(s,this.song.score[s].groupId);if(a.length){for(o=a.length-1;0<o;o--)2===this.song.score[a[o]].type&&0===this.song.score[a[o]].status?this._setNoteInstance(a[o],new y(this.song.score[a[o]],this.song.score[a[o-1]],this._getSyncNote(a[o]))):this._setNoteInstance(a[o],new g(this.song.score[a[o]],this.song.score[a[o-1]],this._getSyncNote(a[o])));2===this.song.score[a[0]].type&&0===this.song.score[a[0]].status?this._setNoteInstance(a[0],new y(this.song.score[a[0]],this.song.score[s],this._getSyncNote(a[0]))):this._setNoteInstance(a[0],new g(this.song.score[a[0]],this.song.score[s],this._getSyncNote(a[0])))}2===this.song.score[s].type&&0===this.song.score[s].status?this._setNoteInstance(s,new y(this.song.score[s],e,this._getSyncNote(s))):this._setNoteInstance(s,new g(this.song.score[s],e,this._getSyncNote(s)))}this._setNoteInstance(t,new y(e,void 0,this._getSyncNote(t)));break;case 3:var r=this._findSameGroup(t,e.groupId);if(r.length){for(o=r.length-1;0<o;o--)3===this.song.score[r[o]].type&&0===this.song.score[r[o]].status?this._setNoteInstance(r[o],new T(this.song.score[r[o]],this.song.score[r[o-1]],this._getSyncNote(r[o]))):this._setNoteInstance(r[o],new g(this.song.score[r[o]],this.song.score[r[o-1]],this._getSyncNote(r[o])));3===this.song.score[r[0]].type&&0===this.song.score[r[0]].status?this._setNoteInstance(r[0],new T(this.song.score[r[0]],e,this._getSyncNote(r[0]))):this._setNoteInstance(r[0],new g(this.song.score[r[0]],e,this._getSyncNote(r[0])))}this._setNoteInstance(t,new T(e,void 0,this._getSyncNote(t)))}}},u.prototype.start=function(){var t=this;if(this._isReady){c.play(this.audio);var e=this;!function t(){e._cal();e._renderNote();e._t=window.requestAnimationFrame(t)}()}else setTimeout(function(){t.start()},100)},u.prototype.stop=function(){this.audio.pause(),window.cancelAnimationFrame(this._t)},u.prototype._clear=function(){this._isClean||(this.frontCtx.clearRect(0,0,u.CANVAS_WIDTH,u.CANVAS_HEIGHT-15),this._isClean=!0)},u.prototype._cal=function(){for(var t=-1,e=0;e<this.song.score.length;e++){if(this.song.score[e].sec>this.audio.currentTime){t=e;break}this.song.score[e]._instance.setY(u.calY(this.options.speed,this.song.score[e].sec,this.audio.currentTime))}-1===t&&(t=this.song.score.length),this._comboDom.innerHTML!==""+t&&(this._comboDom.innerHTML=""+t);for(e=t;e<this.song.score.length;e++)this.song.score[e]._instance.setY(u.calY(this.options.speed,this.song.score[e].sec,this.audio.currentTime))},u.prototype._findLongNote=function(t,e){for(var n=t+1;n<this.song.score.length;n++)if(this.song.score[n].finishPos===e)return n;return-1},u.prototype._findSameGroup=function(t,e){if(0===e)return[];for(var n=[],i=t+1;i<this.song.score.length;i++)this.song.score[i].groupId===e&&n.push(i);return n},u.prototype._renderNote=function(){this._clear();for(var t=this.song.score.length-1;0<=t;t--)this.song.score[t]._instance.isNeedDraw()&&this.song.score[t]._instance.drawConnection(this);this.frontCtx.save(),this.frontCtx.fillStyle="#fff";for(t=this.song.score.length-1;0<=t;t--)this.song.score[t]._instance.isNeedDraw()&&this.song.score[t]._instance.drawSync(this);this.frontCtx.restore();for(t=this.song.score.length-1;0<=t;t--)this.song.score[t]._instance.isNeedDraw()&&this.song.score[t]._instance.drawNote(this);this._isClean=!1},u.prototype._getSyncNote=function(t){if(t!==this.song.score.length-1&&1===this.song.score[t].sync&&this.song.score[t].sec===this.song.score[t+1].sec)return this.song.score[t+1]},u.prototype._saveScore=function(){return w(this,void 0,void 0,function(){var c,l,n=this;return O(this,function(t){switch(t.label){case 0:return this._isReady?(c=function(){return new Promise(function(e){n.saveCanvas.toBlob(function(t){e(t)},"image/png",1)})},[4,(l=function(){return w(n,void 0,void 0,function(){var e,n,i,o,s,a,r,h;return O(this,function(t){switch(t.label){case 0:if(!this._isReadyToSave){for(this.stop(),this.saveCanvas.height=60*d.saveSpeed*this.audio.duration/d.scale,this.saveCtx=this.saveCanvas.getContext("2d"),this.saveCtx.fillStyle="rgba(255, 255, 255, 0.66)",this.saveCtx.save(),this.saveCtx.fillStyle="rgb(39, 40, 34)",this.saveCtx.font="12px Consolas",this.saveCtx.fillRect(0,0,this.saveCanvas.width,this.saveCanvas.height),this.saveCtx.strokeStyle="#e070d0",this.saveCtx.fillStyle="#e070d0",e=this.saveCanvas.height-10,this.saveCtx.font="12px -apple-system, BlinkMacSystemFont, Segoe WPC,Segoe UI, HelveticaNeue-Light, Noto Sans, Microsoft YaHei, PingFang SC, Hiragino Sans GB, Source Han Sans SC, Source Han Sans CN, Source Han Sans, sans-serif",this.saveCtx.fillStyle="#fff",this.saveCtx.textAlign="center",this.saveCtx.fillText("https://github.com/toyobayashi/mishiro-score-viewer",this.saveCanvas.width/2,e-7),this.saveCtx.restore(),d.noteWidth/=d.scale,d.noteHeight/=d.scale,d.noteWidthFlip/=d.scale,n=u.TOP_TO_TARGET_POSITION,i=u.X,u.X=[32,208,383,558,731].map(function(t){return t/d.scale}),u.TOP_TO_TARGET_POSITION=this.saveCanvas.height,o=0;o<this.song.score.length;o++)this.song.score[o]._instance.setX(this.song.score[o]._instance.getX()/d.scale),this.song.score[o]._instance.setY(u.saveCalY(this,this.song.score[o].sec));for(o=this.song.score.length-1;0<=o;o--)this.song.score[o]._instance.saveDrawConnection(this);for(this.saveCtx.save(),this.saveCtx.fillStyle="#fff",o=this.song.score.length-1;0<=o;o--)this.song.score[o]._instance.saveDrawSync(this);for(this.saveCtx.restore(),o=this.song.score.length-1;0<=o;o--)this.song.score[o]._instance.saveDrawNote(this);for(o=0;o<this.song.score.length;o++)this.song.score[o]._instance.setX(this.song.score[o]._instance.getX()*d.scale);d.noteWidth*=d.scale,d.noteHeight*=d.scale,d.noteWidthFlip*=d.scale,u.TOP_TO_TARGET_POSITION=n,u.X=i}return[4,c()];case 1:return(s=t.sent())?[3,3]:(a=d.saveSpeed,d.saveSpeed--,[4,l()]);case 2:return t.sent(),d.saveSpeed=a,[2];case 3:return this._isReadyToSave=!0,this.start(),window.cordova?[4,f.e(3).then(f.bind(null,33))]:[3,6];case 4:return[4,(0,t.sent().writeFile)(""+window.cordova.file.externalDataDirectory+u._id+"-"+u._difficulty+".png",s)];case 5:return t.sent(),cordova.plugins.MyToast.toast("Success","short",function(){return console.log("toast")},function(t){return console.log(t)}),[3,7];case 6:(r=document.createElement("a")).download=u._id+"-"+u._difficulty+".png",r.href=URL.createObjectURL(s),h=new MouseEvent("click",{view:window,bubbles:!0,cancelable:!0}),r.dispatchEvent(h),r.remove(),t.label=7;case 7:return[2]}})})})()]):(setTimeout(function(){return w(n,void 0,void 0,function(){return O(this,function(t){switch(t.label){case 0:return[4,this._saveScore()];case 1:return t.sent(),[2]}})})},100),[2]);case 1:return t.sent(),[2]}})})},u.prototype._resolveDOM=function(t){var e=this;this.frontCanvas=document.createElement("canvas"),this.saveCanvas=document.createElement("canvas"),this.frontCanvas.width=u.CANVAS_WIDTH,this.frontCanvas.height=u.CANVAS_HEIGHT,this.saveCanvas.width=u.CANVAS_WIDTH/d.scale,this.pauseButton=document.createElement("button"),this.pauseButton.innerHTML="play",this.pauseButton.addEventListener("click",function(){d.playSe(),e._isPaused?e.start():e.stop()}),this.pauseButton.className="cgss-btn cgss-btn-ok",this.pauseButton.style.position="absolute",this.pauseButton.style.zIndex="2000",this.pauseButton.style.top="2%",this.pauseButton.style.left="1%",this.saveButton=document.createElement("button"),this.saveButton.innerHTML="save",this.saveButton.addEventListener("click",function(){d.playSeOk(),e._saveScore()}),this.saveButton.className="cgss-btn cgss-btn-ok",this.saveButton.style.position="absolute",this.saveButton.style.zIndex="2000",this.saveButton.style.top="calc(2% + 84px)",this.saveButton.style.left="1%",this.rangeInput=document.createElement("input"),this.rangeInput.type="range",this.rangeInput.min="0",this.rangeInput.max="100",this.rangeInput.value="0",this.rangeInput.style.position="absolute",this.rangeInput.style.zIndex="2000",this.rangeInput.style.width="50%",this.rangeInput.style.left="25%",this.rangeInput.style.bottom="10px",this.rangeInput.addEventListener("input",function(t){e.audio.currentTime=Number(t.target.value)}),this.speedInput=document.createElement("input"),this.speedInput.type="range",this.speedInput.min="5",this.speedInput.max="20",this.speedInput.value="12",this.speedInput.style.position="absolute",this.speedInput.style.zIndex="2000",this.speedInput.style.width="15%",this.speedInput.style.left="2%",this.speedInput.style.bottom="10px",this.speedInput.addEventListener("input",function(t){e.options.speed=Number(t.target.value)});var n=document.createElement("span");this._comboDom=document.createElement("span"),this._comboDom.className="combo-number",this._comboDom.innerHTML="0",n.className="combo-text",n.innerHTML="combo";var i=document.createElement("div");if(i.className="combo",i.appendChild(this._comboDom),i.appendChild(n),d.backPng&&d.backPng.src){this.backCanvas=document.createElement("canvas"),this.backCanvas.width=u.CANVAS_WIDTH,this.backCanvas.height=u.CANVAS_HEIGHT,this.backCtx=this.backCanvas.getContext("2d");var o=this;c.newImage(d.backPng.src).addEventListener("load",function(){o.backCtx.drawImage(this,Math.round((u.CANVAS_WIDTH-this.width)/2),u.CANVAS_HEIGHT-u.BOTTOM-this.height)},!1),t.appendChild(this.backCanvas)}t.appendChild(this.frontCanvas),t.appendChild(this.pauseButton),t.appendChild(this.saveButton),t.appendChild(this.rangeInput),t.appendChild(this.speedInput),t.appendChild(i),this.frontCtx=this.frontCanvas.getContext("2d"),this.frontCtx.fillStyle="rgba(255, 255, 255, 0.66)",this.audio.addEventListener("canplay",function(){e._isReady=!0,e.rangeInput.max=e.audio.duration.toString()}),this.audio.addEventListener("play",function(){e._isPaused=!1,e.pauseButton.innerHTML="pause",e.pauseButton.className="cgss-btn cgss-btn-star"}),this.audio.addEventListener("pause",function(){e._isPaused=!0,e.pauseButton.innerHTML="play",e.pauseButton.className="cgss-btn cgss-btn-ok"}),this.audio.addEventListener("timeupdate",function(){e.rangeInput.value=e.audio.currentTime.toString(),e.rangeInput.style.backgroundSize=e.audio.currentTime/e.audio.duration*100+"% 100%"});var s=function(){window.innerWidth/window.innerHeight>=u.CANVAS_WIDTH/u.CANVAS_HEIGHT?(e.frontCanvas.className="canvas canvas-center",e.backCanvas&&(e.backCanvas.className="canvas canvas-center")):(e.frontCanvas.className="canvas canvas-middle",e.backCanvas&&(e.backCanvas.className="canvas canvas-middle"))};s(),window.addEventListener("resize",s,!1)},u._instance=null,u.CANVAS_WIDTH=867,u.CANVAS_HEIGHT=720,u.X=[32,208,383,558,731],u.TOP_TO_TARGET_POSITION=u.CANVAS_HEIGHT-(u.BOTTOM=20)-(d.backPng?d.backPng.height:0)+(d.backPng?Math.round((d.backPng.height-d.noteHeight)/2):0),u}();window.cordova?document.addEventListener("deviceready",function(){I.main()}):I.main()}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,